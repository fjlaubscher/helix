{"version":3,"sources":["webpack:///./src/containers/home/styles.scss?556b","webpack:///./src/containers/home/index.tsx"],"names":["module","exports","Home","className","styles","grid","column","heading","text","keyword","features","role","aria-label","info","code","loader"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,0BAA0B,KAAO,sBAAsB,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,wB,gCCD7R,oDA6FeC,UAvFF,kBACX,oCACE,yBAAKC,UAAWC,IAAOC,MACrB,yBAAKF,UAAWC,IAAOE,QACrB,wBAAIH,UAAWC,IAAOG,SAAtB,kBACA,uBAAGJ,UAAWC,IAAOI,MACnB,0BAAML,UAAWC,IAAOK,SAAxB,SADF,qBACkE,IAChE,0BAAMN,UAAWC,IAAOK,SAAxB,SAFF,4GAOF,yBAAKN,UAAWC,IAAOE,QACrB,wBAAIH,UAAWC,IAAOG,SAAtB,oBACA,wBAAIJ,UAAWC,IAAOM,UACpB,4BACE,0BAAMC,KAAK,MAAMC,aAAW,UAA5B,MADF,iCAMA,4BACE,0BAAMD,KAAK,MAAMC,aAAW,OAA5B,MADF,uBAMA,4BACE,0BAAMD,KAAK,MAAMC,aAAW,kBAA5B,SADF,mCAMA,4BACE,0BAAMD,KAAK,MAAMC,aAAW,cAA5B,SADF,cAMA,4BACE,0BAAMD,KAAK,MAAMC,aAAW,eAA5B,MADF,QAMA,4BACE,0BAAMD,KAAK,MAAMC,aAAW,OAA5B,MADF,eAQJ,yBAAKT,UAAWC,IAAOE,QACrB,wBAAIH,UAAWC,IAAOG,SAAtB,uCACA,uBAAGJ,UAAWC,IAAOI,MACnB,0BAAML,UAAWC,IAAOK,SAAxB,oBADF,gEAEmD,IACjD,0BAAMN,UAAWC,IAAOK,SAAxB,SAHF,mDAKE,6BACA,0BAAMN,UAAWC,IAAOK,SAAxB,SANF,uIASE,6BACA,6BAVF,2CAYE,6BACA,yDAIN,yBAAKN,UAAWC,IAAOS,MACrB,qDACyB,IACvB,0BAAMV,UAAWC,IAAOU,MAAxB,kCAEF,qEACyC,IACvC,0BAAMX,UAAWC,IAAOU,MAAxB,cAFF,cAE6D,IAC3D,0BAAMX,UAAWC,IAAOU,MAAxB,6BAEF,kBAAC,IAAD,CAAQX,UAAWC,IAAOW","file":"1.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"styles__heading--2L4_w\",\"column\":\"styles__column--TYF-J\",\"text\":\"styles__text--1XjBi\",\"features\":\"styles__features--3S_Eb\",\"code\":\"styles__code--2_W2_\",\"keyword\":\"styles__keyword--213kj\",\"loader\":\"styles__loader--2Bh9u\",\"info\":\"styles__info--uM8fi\",\"grid\":\"styles__grid--2hkBg\"};","import React from 'react';\r\n\r\nimport Loader from '../../components/loader';\r\n\r\nimport styles from './styles.scss';\r\n\r\nconst Home = () => (\r\n  <>\r\n    <div className={styles.grid}>\r\n      <div className={styles.column}>\r\n        <h1 className={styles.heading}>What is Helix?</h1>\r\n        <p className={styles.text}>\r\n          <span className={styles.keyword}>Helix</span> is an opinionated{' '}\r\n          <span className={styles.keyword}>React</span> boilerplate which tries\r\n          to keep config to a minimum while allowing you to configure whatever\r\n          you need.\r\n        </p>\r\n      </div>\r\n      <div className={styles.column}>\r\n        <h1 className={styles.heading}>What does it do?</h1>\r\n        <ul className={styles.features}>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"config\">\r\n              ‚öôÔ∏è\r\n            </span>\r\n            Minimal and accessible config\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"hmr\">\r\n              ‚ôªÔ∏è\r\n            </span>\r\n            React Refresh (HMR)\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"code splitting\">\r\n              ü§∏‚Äç‚ôÄÔ∏è\r\n            </span>\r\n            Code Splitting using React.lazy\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"typescript\">\r\n              üë®‚Äçüíª\r\n            </span>\r\n            TypeScript\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"css modules\">\r\n              üìö\r\n            </span>\r\n            SCSS\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"pwa\">\r\n              üì±\r\n            </span>\r\n            PWA ready\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className={styles.column}>\r\n        <h1 className={styles.heading}>Why Helix and not create-react-app?</h1>\r\n        <p className={styles.text}>\r\n          <span className={styles.keyword}>create-react-app</span> suits most,\r\n          if not all, needs when it comes to bootstrapping{' '}\r\n          <span className={styles.keyword}>React</span> apps and has a massive\r\n          community supporting it.\r\n          <br />\r\n          <span className={styles.keyword}>Helix</span> is something a lot more\r\n          niche, allowing power-users to tweak anything to their needs while\r\n          providing a simple and clean foundation.\r\n          <br />\r\n          <br />\r\n          Don&apos;t like SCSS and want something else?\r\n          <br />\r\n          <strong>You can change it.</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div className={styles.info}>\r\n      <h1>\r\n        Get started by editing{' '}\r\n        <code className={styles.code}>src/containers/home/index.tsx</code>\r\n      </h1>\r\n      <h2>\r\n        To see how code splitting is done with{' '}\r\n        <code className={styles.code}>React.lazy</code> go look at{' '}\r\n        <code className={styles.code}>src/containers/index.tsx</code>\r\n      </h2>\r\n      <Loader className={styles.loader} />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}